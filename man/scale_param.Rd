% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/harp_df_list.R
\name{scale_param}
\alias{scale_param}
\alias{scale_param.data.frame}
\title{Scale a parameter in a data frame}
\usage{
scale_param(x, scaling, new_units, mult = FALSE, col = NULL, ...)

\method{scale_param}{data.frame}(x, scaling, new_units, mult = FALSE, col, ...)
}
\arguments{
\item{x}{A data frame or a harp_list.}

\item{scaling}{The scaling to apply to the data. By default the scaling is
additive, but if \code{mult = TRUE} it is multiplicative.}

\item{new_units}{The name of the new units. If missing, the units name will
be unchanged.}

\item{mult}{Logical. Whether the scaling is multiplicative. The default is
\code{FALSE}, meaning that the scaling is additive.}

\item{col}{The name of the column to scale - if \code{x} is a forecast or
analysis \code{harp_df} data frame or a \code{harp_list}, the columns will
be selected automatically and \code{col} is ignored.}
}
\value{
A data frame or \code{harp_list} with scaled parameter.
}
\description{
Scale a parameter in a data frame
}
\examples{
# Make a data frame of 2m temperature observations in degrees C
library(tibble)
obs <- tibble(
  valid_date = rep(seq_dttm(2022081500, 2022081523), 3),
  SID        = c(rep(1001, 24), rep(1002, 24), rep(1003, 24)),
  units      = "degC",
  T2m        = rnorm(24 * 3, 15, 2)
)

# Scale to be in Kelvin
scale_param(obs, 273.15, "K", col = T2m)

# col can be a quoted, or if a variable is must be wrapped in {{}}
scale_param(obs, 273.15, "K", col = "T2m")
prm <- "T2m"
scale_param(obs, 273.15, "K", col = {{prm}})

# For forecast data frames, col is not needed
scale_param(det_point_df, 273.15, "K")
scale_param(ens_point_df, 273.15, "K")

# Scaling can be multiplicative
scale_param(det_point_df, 100, "percent", mult = TRUE)
scale_param(ens_point_list, 1/1000, "kg/kg", mult = TRUE)
}
